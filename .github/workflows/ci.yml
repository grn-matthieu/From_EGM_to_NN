name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        julia-version: ['1.11.6']

    steps:
      - uses: actions/checkout@v4

      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.julia-version }}

      - uses: julia-actions/cache@v2

      - name: Instantiate formatter env
        run: julia --project=.formatter -e 'using Pkg; Pkg.instantiate()'

      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - run: pip install --upgrade pip pre-commit

      - name: Instantiate project
        run: julia --project=. -e 'using Pkg; Pkg.instantiate()'

      - name: Run pre-commit (all files)
        run: pre-commit run --all-files --show-diff-on-failure

      - name: Run tests with coverage
        run: julia --project=. --code-coverage=user -e 'using Pkg; Pkg.test(coverage=true)'

      - name: Generate coverage report (src only)
        run: |
          julia -e '
            using Pkg
            Pkg.activate(temp=true)
            Pkg.add("Coverage")
            using Coverage
            cov = process_folder("src")
            LCOV.writefile("lcov.info", cov)
          '

      - name: Check coverage
        run: |
          julia -e '
            using Pkg
            Pkg.activate(temp=true)
            Pkg.add("Coverage")
            using Coverage: LCOV, get_summary
            cov = LCOV.readfile("lcov.info")
            covered, total = get_summary(cov)
            pct = covered / total * 100
            println("Coverage: ", pct)
            if pct < 70
              error("Coverage below 70%")
            end
          '

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: lcov.info
          fail_ci_if_error: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Cleanup coverage artifacts
        run: |
          find . -type f \( -name "*.cov" -o -name "*.info" -o -name "lcov.info" \) -print -delete || true

      - name: Smoke (deterministic and stochastic)
        run: julia --project=. scripts/ci/smoke.jl
