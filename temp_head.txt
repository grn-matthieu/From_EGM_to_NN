#!/usr/bin/env julia

"""
Stress test all methods (EGM, Projection, Perturbation) across values of β and σ.

Runs both deterministic and stochastic cases by toggling `shocks.active`.
Logs successes and failures (with error types/messages and stacktraces) to CSV.

Configure via env vars (optional):
  - BETA_LIST   e.g. "0.92,0.95,0.98"
  - SIGMA_LIST  e.g. "1.0,2.0,3.0"
  - METHODS     e.g. "EGM,Projection,Perturbation" (defaults to all)

CLI flags (optional):
  --Na=...        integer grid points for assets
  --Nz=...        integer shock states when stochastic
  --tol=...       Float64 tolerance (if applicable)
  --tol_pol=...   Float64 policy tolerance (EGM)
  --out=...       custom output CSV path

Usage:
  julia --project=. scripts/experiments/stress_all_methods.jl [--Na=..] [--Nz=..] [--tol=..] [--tol_pol=..] [--out=...]
"""

module StressAllMethods

import Pkg
Pkg.activate(normpath(joinpath(@__DIR__, "..", "..")); io = devnull)

using Dates
using Printf
using Random
using Statistics: mean
using ThesisProject

const ROOT = normpath(joinpath(@__DIR__, "..", ".."))

ensure_outputs_dir() = (out = joinpath(ROOT, "outputs"); isdir(out) || mkpath(out); out)

"""Parse comma-separated floats env var into a Vector{Float64}."""
